<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.gt.mess</groupId>
    <artifactId>parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>mess-web</module>
        <module>mess-dao</module>
        <module>mess-common</module>
        <module>mess-service</module>
        <module>mess-entity</module>
        <module>mess-generator</module>
    </modules>
    <packaging>pom</packaging>
    <name>parent</name>
    <url>http://mess.duofee.com</url>
    <!-- 开发人员列表 -->
    <developers>
        <developer>
            <id>zengwx008</id>
            <name>zengwx</name>
            <email>307848200@qq.com</email>
        </developer>
    </developers>

    <description>
        多模块 SpringBoot + SSM
        使用SpringMvc + Spring + MybatisPlus
    </description>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.7</java.version>
        <dev.lib.swagger2>2.6.0</dev.lib.swagger2>
        <dev.lib.mybatis>1.1.1</dev.lib.mybatis>
        <dev.lib.druid-spring-boot-starter>1.1.2</dev.lib.druid-spring-boot-starter>
        <dev.lib.mysql>5.1.39</dev.lib.mysql>
        <dev.lib.mybatis-plus>2.1.0</dev.lib.mybatis-plus>
        <dev.lib.mybatisplus-spring-boot-starter>1.0.4</dev.lib.mybatisplus-spring-boot-starter>
        <dev.lib.velocity>1.7</dev.lib.velocity>
        <dev.lib.commons-lang3>3.5</dev.lib.commons-lang3>
        <dev.lib.nekohtml>1.9.22</dev.lib.nekohtml>
        <dev.lib.vue>2.1.3</dev.lib.vue>
        <dev.lib.fastjson>1.2.0</dev.lib.fastjson>
        <dev.lib.jjwt>0.7.0</dev.lib.jjwt>
        <dev.lib.lombok>1.16.18</dev.lib.lombok>
        <dev.lib.joda-time>2.9.9</dev.lib.joda-time>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.5.RELEASE</version>
    </parent>

    <dependencyManagement>
        <dependencies>


        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- 导出功能所需JAR包 -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.9</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.9</version>
        </dependency>

        <!-- wxmpApi jar-->
        <dependency>
            <groupId>com.gt.api</groupId>
            <artifactId>gt_api</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>commons-lang</artifactId>
                    <groupId>commons-lang</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>fastjson</artifactId>
                    <groupId>com.alibaba</groupId>
                </exclusion>
            </exclusions>
            <version>1.3.17-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.gt.wxmp</groupId>
            <artifactId>lfx_wxmp_entity</artifactId>
            <version>1.0.8</version>
        </dependency>

        <!-- 将内嵌的tomcat容器标记为provided(来自官网) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <!--使用内置tomcat启动的时候需要注释掉,打包的时候记得打开-->
            <!--<scope>provided</scope>-->
        </dependency>

        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <!--<scope>provided</scope>-->
        </dependency>

        <!-- servlet 依赖. -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- Springboot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!-- 移除内嵌的tomcat运行容器 -->
            <!--<exclusions>-->
                <!--<exclusion>-->
                    <!--<groupId>org.springframework.boot</groupId>-->
                    <!--<artifactId>spring-boot-starter-tomcat</artifactId>-->
                <!--</exclusion>-->
            <!--</exclusions>-->
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!-- @Configuration注解建议引入 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Springboot 热部署 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>


        <!-- Swagger API文档 -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${dev.lib.swagger2}</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${dev.lib.swagger2}</version>
        </dependency>


        <!-- mybatisPlus代码生成模板引擎 -->
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity</artifactId>
            <version>${dev.lib.velocity}</version>
        </dependency>

        <!-- MP 核心库 -->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus</artifactId>
            <version>${dev.lib.mybatis-plus}</version>
        </dependency>

        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatisplus-spring-boot-starter</artifactId>
            <version>${dev.lib.mybatisplus-spring-boot-starter}</version>
        </dependency>

        <!-- druid阿里巴巴数据库连接池 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${dev.lib.druid-spring-boot-starter}</version>
        </dependency>

        <!-- MySql数据库驱动 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${dev.lib.mysql}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- apache 工具包 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${dev.lib.commons-lang3}</version>
        </dependency>
        <!-- 单元测试 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Spring Boot Reids 依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <!-- Spring Session Redis 方式共享sessoin 依赖包 -->
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-data-redis</artifactId>
        </dependency>


        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session</artifactId>
        </dependency>

        <!-- json 包 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${dev.lib.fastjson}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${dev.lib.lombok}</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${dev.lib.joda-time}</version>
        </dependency>

        <!--ftp-->
        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>3.6</version>
        </dependency>

        <!-- 打印使用 freemark -->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
        </dependency>


    </dependencies>


    <build>
        <defaultGoal>package</defaultGoal>
        <resources>
            <!-- 导入的资源文件，该目录下的文件会copy到classpath根目录下 -->
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                    <include>**/*.dtd</include>
                    <include>**/*.yml</include>
                    <include>**/*.ftl</include>
                </includes>
                <!-- 是否替换资源中的属性-->
                <filtering>false</filtering>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <fork>true</fork>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <!-- 去除单元测试 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <!-- jerebel maven 插件，用于生成jrebel.xml -->
            <plugin>
                <groupId>org.zeroturnaround</groupId>
                <artifactId>jrebel-maven-plugin</artifactId>
                <version>1.1.7</version>
                <configuration>
                    <addResourcesDirToRebelXml>true</addResourcesDirToRebelXml>
                    <alwaysGenerate>true</alwaysGenerate>
                    <showGenerated>true</showGenerated>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-rebel-xml</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <!--<configuration>
                    <rebelXmlDirectory>${basedir}/out/production/</rebelXmlDirectory>
                    &lt;!&ndash; 指定生成的jrebel.xml放在哪里， 要求放在web应用的 classpath下 &ndash;&gt;
                </configuration>-->
            </plugin>


        </plugins>
    </build>

</project>
