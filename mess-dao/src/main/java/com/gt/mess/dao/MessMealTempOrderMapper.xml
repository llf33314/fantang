<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gt.mess.dao.MessMealTempOrderMapper" >
  <resultMap id="BaseResultMap" type="com.gt.mess.entity.MessMealTempOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="main_id" property="mainId" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="VARCHAR" />
    <result column="card_code" property="cardCode" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="DOUBLE" />
    <result column="add_num" property="addNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, main_id, time, card_code, money, add_num
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_mess_meal_temp_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="countMessMealTempByMainId" parameterType="java.lang.Integer" >
  	SELECT COUNT(id) FROM t_mess_meal_temp_order WHERE main_id = #{mainId};
  </select>
  <select id="getMessMealTempOrderByMainId" resultType="map" >
    SELECT * FROM t_mess_meal_temp_order WHERE main_id = #{mainId} ORDER BY id desc LIMIT #{nums};
  </select>
  <delete id="deletLastByMainId" parameterType="java.lang.Integer" >
    DELETE FROM t_mess_meal_temp_order WHERE main_id = #{mainId} ORDER BY id ASC LIMIT 1;
  </delete>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_mess_meal_temp_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gt.mess.entity.MessMealTempOrder" >
    insert into t_mess_meal_temp_order (id, main_id, time, 
      card_code, money, add_num
      )
    values (#{id,jdbcType=INTEGER}, #{mainId,jdbcType=INTEGER}, #{time,jdbcType=VARCHAR}, 
      #{cardCode,jdbcType=VARCHAR}, #{money,jdbcType=DOUBLE}, #{addNum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gt.mess.entity.MessMealTempOrder" >
    insert into t_mess_meal_temp_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mainId != null" >
        main_id,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="cardCode != null" >
        card_code,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="addNum != null" >
        add_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="mainId != null" >
        #{mainId,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="cardCode != null" >
        #{cardCode,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="addNum != null" >
        #{addNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gt.mess.entity.MessMealTempOrder" >
    update t_mess_meal_temp_order
    <set >
      <if test="mainId != null" >
        main_id = #{mainId,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="cardCode != null" >
        card_code = #{cardCode,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="addNum != null" >
        add_num = #{addNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gt.mess.entity.MessMealTempOrder" >
    update t_mess_meal_temp_order
    set main_id = #{mainId,jdbcType=INTEGER},
      time = #{time,jdbcType=VARCHAR},
      card_code = #{cardCode,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      add_num = #{addNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>